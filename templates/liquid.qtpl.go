// This file is automatically generated by qtc from "liquid.qtpl".
// See https://github.com/valyala/quicktemplate for details.

//line wasgood/templates/liquid.qtpl:1
package templates

//line wasgood/templates/liquid.qtpl:1
import (
	"github.com/gin-gonic/gin"
	"wasgood/models"
)

//line wasgood/templates/liquid.qtpl:6
import (
	qtio422016 "io"

	qt422016 "github.com/valyala/quicktemplate"
)

//line wasgood/templates/liquid.qtpl:6
var (
	_ = qtio422016.Copy
	_ = qt422016.AcquireByteBuffer
)

//line wasgood/templates/liquid.qtpl:7
type LiquidPage struct {
	Page
	Liquid        *models.Liquid
	RelativeItems []*models.Item
}

//line wasgood/templates/liquid.qtpl:14
func StreamLiquid(qw422016 *qt422016.Writer, c *gin.Context, p *LiquidPage) {
	//line wasgood/templates/liquid.qtpl:14
	qw422016.N().S(`
`)
	//line wasgood/templates/liquid.qtpl:15
	streamheader(qw422016, c, &p.Page)
	//line wasgood/templates/liquid.qtpl:15
	qw422016.N().S(`
`)
	//line wasgood/templates/liquid.qtpl:16
	item := p.Liquid

	//line wasgood/templates/liquid.qtpl:16
	qw422016.N().S(`
<div class="content item single-item" data-item-id="`)
	//line wasgood/templates/liquid.qtpl:17
	qw422016.N().D(item.ID)
	//line wasgood/templates/liquid.qtpl:17
	qw422016.N().S(`">
	<div class="uk-panel uk-panel-box">
		
		`)
	//line wasgood/templates/liquid.qtpl:20
	streamitemPart(qw422016, &item.Item, c)
	//line wasgood/templates/liquid.qtpl:20
	qw422016.N().S(`
		
		<div class="uk-width-3-3 uk-width-medium-2-3 uk-push-1-3">
			`)
	//line wasgood/templates/liquid.qtpl:23
	if len(item.Flavors) > 0 {
		//line wasgood/templates/liquid.qtpl:23
		qw422016.N().S(`
				<div class="flavors uk-grid">
					`)
		//line wasgood/templates/liquid.qtpl:25
		for _, flavor := range item.Flavors {
			//line wasgood/templates/liquid.qtpl:25
			qw422016.N().S(`
						<span class="block">
							<i class="uk-icon-hashtag"></i>
							<a href="`)
			//line wasgood/templates/liquid.qtpl:28
			streamurl(qw422016, "/flavor/")
			//line wasgood/templates/liquid.qtpl:28
			qw422016.E().S(flavor.Slug)
			//line wasgood/templates/liquid.qtpl:28
			qw422016.N().S(`">`)
			//line wasgood/templates/liquid.qtpl:28
			qw422016.E().S(flavor.Name)
			//line wasgood/templates/liquid.qtpl:28
			qw422016.N().S(`</a>
						</span>
					`)
			//line wasgood/templates/liquid.qtpl:30
		}
		//line wasgood/templates/liquid.qtpl:30
		qw422016.N().S(`
				</div>
			`)
		//line wasgood/templates/liquid.qtpl:32
	}
	//line wasgood/templates/liquid.qtpl:32
	qw422016.N().S(`

			`)
	//line wasgood/templates/liquid.qtpl:34
	if len(p.RelativeItems) > 0 {
		//line wasgood/templates/liquid.qtpl:34
		qw422016.N().S(`
				<div class="uk-margin uk-margin-large-top uk-h4">от бренда <a class="brand uk-text-primary" href="`)
		//line wasgood/templates/liquid.qtpl:35
		streamurl(qw422016, "/brand/")
		//line wasgood/templates/liquid.qtpl:35
		qw422016.E().S(item.Brand.Slug)
		//line wasgood/templates/liquid.qtpl:35
		qw422016.N().S(`">`)
		//line wasgood/templates/liquid.qtpl:35
		qw422016.E().S(item.Brand.Name)
		//line wasgood/templates/liquid.qtpl:35
		qw422016.N().S(`</a>:</div>
				<div class="uk-grid relative_items rating-list uk-grid-match" data-uk-grid-margin>
					`)
		//line wasgood/templates/liquid.qtpl:37
		for _, item := range p.RelativeItems {
			//line wasgood/templates/liquid.qtpl:37
			qw422016.N().S(`
						`)
			//line wasgood/templates/liquid.qtpl:38
			streamsquareItemBlock(qw422016, item)
			//line wasgood/templates/liquid.qtpl:38
			qw422016.N().S(`
					`)
			//line wasgood/templates/liquid.qtpl:39
		}
		//line wasgood/templates/liquid.qtpl:39
		qw422016.N().S(`
				</div>
			`)
		//line wasgood/templates/liquid.qtpl:41
	}
	//line wasgood/templates/liquid.qtpl:41
	qw422016.N().S(`
		</div>
	</div>
	<div class="uk-panel uk-panel-box uk-panel-header">
		`)
	//line wasgood/templates/liquid.qtpl:45
	streamreviewsBlock(qw422016, c, &item.Item)
	//line wasgood/templates/liquid.qtpl:45
	qw422016.N().S(`
	</div>
</div>
`)
	//line wasgood/templates/liquid.qtpl:48
	streamfooter(qw422016, c, &p.Page)
	//line wasgood/templates/liquid.qtpl:48
	qw422016.N().S(`
`)
//line wasgood/templates/liquid.qtpl:49
}

//line wasgood/templates/liquid.qtpl:49
func WriteLiquid(qq422016 qtio422016.Writer, c *gin.Context, p *LiquidPage) {
	//line wasgood/templates/liquid.qtpl:49
	qw422016 := qt422016.AcquireWriter(qq422016)
	//line wasgood/templates/liquid.qtpl:49
	StreamLiquid(qw422016, c, p)
	//line wasgood/templates/liquid.qtpl:49
	qt422016.ReleaseWriter(qw422016)
//line wasgood/templates/liquid.qtpl:49
}

//line wasgood/templates/liquid.qtpl:49
func Liquid(c *gin.Context, p *LiquidPage) string {
	//line wasgood/templates/liquid.qtpl:49
	qb422016 := qt422016.AcquireByteBuffer()
	//line wasgood/templates/liquid.qtpl:49
	WriteLiquid(qb422016, c, p)
	//line wasgood/templates/liquid.qtpl:49
	qs422016 := string(qb422016.B)
	//line wasgood/templates/liquid.qtpl:49
	qt422016.ReleaseByteBuffer(qb422016)
	//line wasgood/templates/liquid.qtpl:49
	return qs422016
//line wasgood/templates/liquid.qtpl:49
}
